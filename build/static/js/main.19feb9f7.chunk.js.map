{"version":3,"sources":["components/Navigation/Navigation.js","components/Logo/Logo.js","components/ImageLinkForm/ImageLinkForm.js","components/Rank/Rank.js","components/FaceRecognition/FaceRecognition.js","components/SignIn/SignIn.js","components/Register/Register.js","App.js","serviceWorker.js","index.js"],"names":["Navigation","onRouteChange","isSignedIn","className","style","display","justifyContent","onClick","Logo","options","max","height","width","alignItems","src","alt","ImageLinkForm","onInputChange","onButtonSubmit","type","placeholder","onChange","Rank","name","entries","FaceRecognition","boxes","imageOnBox","peopleNumber","console","log","map","box","i","key","length","SignIn","props","onEmailChange","event","setState","signInEmail","target","value","onPasswordChange","signInPassword","onSubmitSignIn","fetch","method","headers","body","JSON","stringify","email","state","password","then","response","json","user","id","loadUser","this","htmlFor","href","Component","Register","context","onNameChange","onSubmit","joined","Date","React","initialState","input","inputUrl","route","App","data","calculateFaceLocation","region","clarifaiFace","region_info","bounding_box","boundries","top","String","top_row","bottom","bottom_row","left","left_col","right","right_col","url","count","Object","assign","catch","outputs","regions","err","params","ParticlesOption","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.19feb9f7.chunk.js","sourcesContent":["import React from 'react';\n\n\nconst Navigation = ({onRouteChange, isSignedIn}) =>{\n\n\tif(isSignedIn===true){\n\t\treturn(\n\t\t\t<nav\n\t\t\tclassName=\"f3 link  dim black  underline pa3 flex \" \n\t\t\tstyle={ { display: 'flex', justifyContent: 'flex-end' }}\n\t\t\t>\n\t\t\t <p onClick={()=>onRouteChange('signout')}>Sign Out</p>\n\t\t\t</nav>\n\t\t);\n\t}else{\n\t\treturn(\n\t\t\t<div>\n\t\t\t\t<nav\n\t\t\t\tclassName=\"f3 link  dim black  underline pa3 flex justify-end tracked\" \n\t\t\t\t>\n\t\t\t\t <p className='ma3 pointer' onClick={()=>onRouteChange('signin')}>Sign In</p>\n\t\t\t\t <p className='ma3 pointer' onClick={()=>onRouteChange('register')}>Register</p>\n\t\t\t\t</nav>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default Navigation;","import React from 'react';\nimport Tilt from \"react-tilt\"\n\nconst logoUrl = 'https://img.icons8.com/pastel-glyph/64/000000/brain.png'\n\nconst Logo = () =>{\n\treturn(\n        <div className='ma4 mt0'>\n        \t<div>\n\t\t\t\t<Tilt className=\"Tilt br1 shadow-2\" options={{ max : 55 }} style={{ height: 150, width: 150, display: 'flex', justifyContent: 'center', alignItems: 'center' }} >\n\t\t          <div className=\"Tilt-inner pa3\"> \n\t\t\t\t\t<img src={logoUrl} alt=\"logo\" />\n\t\t          </div>\n\t\t        </Tilt>\n\t\t    </div>\n\t\t</div>\n\t);\n};\n\nexport default Logo;\n","import React from 'react';\nimport './ImageLinkForm.css'\n\nconst ImageLinkForm = ({onInputChange, onButtonSubmit}) => {\n\n\treturn(\n\t\t<div >\n\t\t\t<p className=\"f3\">\n\t\t\t\t{'This Magic Brain will detectfaces in your pictures.'}\n\t\t\t</p>\n\t\t\t<div className=\"center\">\n\t\t\t\t<div className=\"center w-60 pv3 br3 shadow-5 form\">\n\t\t\t\t\t<input\n\t\t\t\t\t\tclassName=\"f4 pa2 w-60\"\n\t\t\t\t\t\ttype=\"url\"\n\t\t\t\t\t\tplaceholder=\"url\"\n\t\t\t\t\t\tonChange={onInputChange}\n\t\t\t\t\t/>\n\t\t\t\t\t<button\n\t\t\t\t\t\tclassName=\"w-20 grow f4 link ph3 pv2 div white bg-light-purple\"\n\t\t\t\t\t\tonClick={onButtonSubmit}>\n\t\t\t\t\t\t {'entry'}\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default ImageLinkForm;","import React from 'react';\n\nconst Rank = ({name, entries}) =>{\n\treturn(\n\t\t<div>\n\t\t\t<div className=\"f3\">\n\t\t\t\t{`Hi ${name}. Your number of uses are`}\n\t\t\t</div>\n\t\t\t<div className=\"f1\">\n\t\t\t\t{`#${entries}`}\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default Rank;","import React from 'react';\nimport './FaceRecognition.css'\n\nconst FaceRecognition = ({src, boxes}) => {\n\tlet imageOnBox = '';\n\tlet peopleNumber = 0;\n\tif (boxes){\n\t\tconsole.log(boxes);\n\t\timageOnBox = boxes.map((box, i) => {\n\t\t\treturn (<div className='bounding-box' key ={i+1} style={box}>{i+1}</div>)\n\t\t});\n\t\tpeopleNumber = boxes.length;\n\t}else{\n\t\timageOnBox = '';\n\t}\n\treturn(\n\t\t<div className='fl1'>\n\t\t\t<p> {`People is ${peopleNumber}`} </p>\n\t\t\t<div className='center w-80  ma2 br2 shadow-5'>\n\t\t\t\t<div className=\"image\">\n\t\t\t\t\t<img alt='pics' className=\"\" src={src}/>\n\t\t\t\t\t{imageOnBox}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default FaceRecognition;","import React, { Component} from 'react';\nimport 'tachyons';\n\nclass SignIn extends Component{\n\tconstructor(props){\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tsignInEmail :'',\n\t\t\tsignInPassword : '',\n\t\t};\n\t}\n\tonEmailChange = (event) => {\n\t\tthis.setState({signInEmail : event.target.value});\n\t}\n\tonPasswordChange = (event) => {\n\t\tthis.setState({signInPassword : event.target.value});\n\t}\n\n\tonSubmitSignIn = (event) =>{\n\t\tfetch('http://localhost:3000/signin', {\n\t\t\tmethod: 'POST',\n\t\t\theaders: {\"Content-Type\" : \"application/json\"},\n\t\t\tbody : JSON.stringify({\n\t\t\t\temail: this.state.signInEmail,\n\t\t\t\tpassword: this.state.signInPassword\n\t\t\t})\n\t\t})\n\t\t.then(response => response.json())\n\t\t.then(user => {\n\t\t\tif(user.id){\n\t\t\t\tthis.props.onRouteChange('home');\n\t\t\t\tthis.props.loadUser(user)\n\t\t\t}\n\t\t});\n\t}\n\n\trender(){\n\t\tconst {onRouteChange} = this.props;\n\t\treturn(\n\t\t\t<article className=\"br2 ba dark-gray b--black-10 mv4 w-100 w-50-m w-25-l mw5 center\">\n\t\t\t\t<main className=\"pa4 black-80\">\n\t\t\t\t  <div className=\"measure\">\n\t\t\t\t    <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\n\t\t\t\t      <legend className=\"f1 fw6 ph0 mh0\">Sign In</legend>\n\t\t\t\t      <div className=\"mt3\">\n\t\t\t\t        <label className=\"db fw6 lh-copy f6\" htmlFor=\"email-address\">Email</label>\n\t\t\t\t        <input\n\t\t\t\t        onChange={this.onEmailChange}\n\t\t\t\t        className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\"\n\t\t\t\t        type=\"email\"\n\t\t\t\t        name=\"email-address\" \n\t\t\t\t        id=\"email-address\" />\n\t\t\t\t      </div>\n\t\t\t\t      <div className=\"mv3\">\n\t\t\t\t        <label className=\"db fw6 lh-copy f6\" htmlFor=\"password\">Password</label>\n\t\t\t\t        <input\n\t\t\t\t        onChange={this.onPasswordChange}\n\t\t\t\t        className=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\"\n\t\t\t\t        type=\"password\"\n\t\t\t\t        name=\"password\"\n\t\t\t\t        id=\"password\" />\n\t\t\t\t      </div>\n\t\t\t\t    </fieldset>\n\t\t\t\t    <div className=\"\">\n\t\t\t\t      <input\n\t\t\t\t      onClick={this.onSubmitSignIn} \n\t\t\t\t      className=\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib\"\n\t\t\t\t      type=\"submit\"\n\t\t\t\t      value=\"Sign in\" />\n\t\t\t\t    </div>\n\t\t\t\t    <div className=\"lh-copy mt3\">\n\t\t\t\t      <p onClick={() =>onRouteChange('register')} href=\"#0\" className=\"f6 link dim black db pointer\">Register</p>\n\t\t\t\t    </div>\n\t\t\t\t  </div>\n\t\t\t\t</main>\n\t\t\t</article>\n\t\t)\n\t}\n}\n\nexport default SignIn;","import React from 'react';\nimport 'tachyons';\n\n\nclass Register extends React.Component{\n\tconstructor(props, context){\n\t\tsuper(props);\n\t\tthis.state={\n\t\t\tname : '',\n\t\t\temail : '',\n\t\t\tpassword:'',\n\t\t\tentries:0,\n\t\t\tjoined: new Date()\n\t\t}\n\t}\n\tonNameChange = (event) => {\n\t\tthis.setState({name: event.target.value});\n\t}\n\n\tonEmailChange = (event) => {\n\t\tthis.setState({email: event.target.value});\n\t}\n\n\tonPasswordChange = (event) => {\n\t\tthis.setState({password: event.target.value});\n\t}\n\n\tonSubmit = (event) => {\n\t\tfetch('http://localhost:3000/register', {\n\t\t\tmethod: 'POST',\n\t\t\theaders: {\"Content-Type\" : \"application/json\"},\n\t\t\tbody : JSON.stringify({\n\t\t\t\tname: this.state.name,\n\t\t\t\temail: this.state.email,\n\t\t\t\tpassword: this.state.password\n\t\t\t})\n\t\t})\n\t\t.then(response => response.json())\n\t\t.then(user => {\n\t\t\tif (user.id){\n\t\t\t\tthis.props.loadUser(user);\n\t\t\t\tconsole.log(user);\n\t\t\t\tthis.props.onRouteChange('home');\n\t\t\t}\n\t\t});\n\t}\n\n\trender(){\n\t\tconst {onRouteChange} = this.props;\n\t\tconst onNameChange = this.onNameChange;\n\t\tconst onEmailChange = this.onEmailChange;\n\t\tconst onPasswordChange = this.onPasswordChange;\n\t\tconst onSubmit = this.onSubmit;\n\t\treturn(\n\t\t\t<article className=\"br2 ba dark-gray b--black-10 mv4 w-100 w-50-m w-25-l mw5 center\">\n\t\t\t\t<main className=\"pa4 black-80\">\n\t\t\t\t  <div className=\"measure\">\n\t\t\t\t    <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\n\t\t\t\t      <legend className=\"f1 fw6 ph0 mh0\">Register</legend>\n\t\t\t\t      <div className=\"mt3\">\n\t\t\t\t        <label className=\"db fw6 lh-copy f6\"  htmlFor=\"name\">Name</label>\n\t\t\t\t        <input\n\t\t\t        \tonChange={onNameChange} \n\t\t\t\t        className=\"name pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\"\n\t\t\t\t        type=\"text\"\n\t\t\t\t        name=\"name\"\n\t\t\t\t        id=\"name\" />\n\t\t\t\t      </div>\n\t\t\t\t      <div className=\"email mt3\">\n\t\t\t\t        <label\n\t\t\t\t        className=\"db fw6 lh-copy f6\"\n\t\t\t\t        htmlFor=\"email-address\"\n\t\t\t\t        >Email</label>\n\t\t\t\t        <input\n\t\t\t\t        onChange={onEmailChange}\n\t\t\t\t        className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\"\n\t\t\t\t        type=\"email\"\n\t\t\t\t        name=\"email-address\"\n\t\t\t\t        id=\"email-address\" />\n\t\t\t\t      </div>\n\t\t\t\t      <div className=\"password mv3\">\n\t\t\t\t        <label className=\"db fw6 lh-copy f6\"  htmlFor=\"password\">Password</label>\n\t\t\t\t        <input\n\t\t\t\t        onChange={onPasswordChange}\n\t\t\t\t        className=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\"\n\t\t\t\t        type=\"password\"\n\t\t\t\t        name=\"password\" \n\t\t\t\t        id=\"password\" />\n\t\t\t\t      </div>\n\t\t\t\t    </fieldset>\n\t\t\t\t    <div className=\"Registerbutton\">\n\t\t\t\t      <input\n\t\t\t\t      onClick={onSubmit} \n\t\t\t\t      className=\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib\"\n\t\t\t\t      type=\"submit\"\n\t\t\t\t      value=\"Register\" />\n\t\t\t\t    </div>\n\t\t\t\t    <div className=\"lh-copy mt3\">\n\t\t\t\t      <p onClick={() => onRouteChange('signin')} href=\"#0\" className=\"f6 link dim black db pointer\">Sign In</p>\n\t\t\t\t    </div>\n\t\t\t\t  </div>\n\t\t\t\t</main>\n\t\t\t</article>\n\t\t)\n\t}\n}\n\nexport default Register;","import React , { Component } from 'react';\nimport Navigation from './components/Navigation/Navigation'\nimport Logo from './components/Logo/Logo';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\nimport Rank from './components/Rank/Rank';\nimport Particles from 'react-particles-js';\nimport ParticlesOption from './particlesjs-config.json';\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition';\nimport SignIn from './components/SignIn/SignIn'\nimport Register from './components/Register/Register' \n\nimport './App.css';\nimport './components/Logo/Logo.css';\nimport 'tachyons';\n\n\n\nconst initialState= {\n    input : '',\n    inputUrl : '' ,\n    boxes: '',\n    route: 'signin',\n    isSignedIn: false,\n    user: {\n      id:'',\n      name:'',\n      email: '',\n      entries: 0,\n      joined: '' \n    }\n}\n\nclass App extends Component {\n\n  constructor(){\n    super();\n    this.state = initialState;\n  }\n\n  loadUser = (data) =>{\n    this.setState({\n      user : {\n        id : data.id,\n        name: data.name,\n        email: data.email,\n        entries: data.entries,\n        joined: data.joined\n      }\n    });\n  }\n\n  calculateFaceLocation = (region) => {\n    const clarifaiFace = region.region_info.bounding_box;\n    const boundries = {\n      top: String(clarifaiFace.top_row * 100)+'%',\n      bottom : String((1 - clarifaiFace.bottom_row) * 100)+'%',\n      left: String(clarifaiFace.left_col * 100) + '%',\n      right: String((1-clarifaiFace.right_col) * 100) + '%',\n    };\n    console.log('calculatefaceLocattion');\n    return boundries\n  }\n\n  onInputChange = (event) => {\n    this.setState({\n      input: event.target.value\n    })\n  }\n\n  onButtonSubmit  = (event) => {\n    this.setState({\n      inputUrl: this.state.input,\n    });\n    fetch('http://localhost:3000/imageUrl', {\n      method: 'POST',\n      headers: {\"Content-Type\" : \"application/json\"},\n      body : JSON.stringify({\n        url: this.state.input,\n      })\n    })\n    .then(response => response.json())\n    .then(response => {\n      console.log('handleApiResponS start', response);\n      if(response){\n        fetch('http://localhost:3000/image', {\n          method: 'PUT',\n          headers: {\"Content-Type\" : \"application/json\"},\n          body : JSON.stringify({\n            id: this.state.user.id,\n          })\n        })\n        .then(response => response.json())\n        .then(count => {\n              this.setState(Object.assign(this.state.user, { entries: count}))\n              // this.setState({user: {entries:count}});\n        })\n        .catch(console.log)\n      }\n      const boxes = response.outputs[0].data.regions.map(this.calculateFaceLocation);\n      this.setState({\n        boxes : boxes\n      });\n    })\n    .catch(err => {\n      console.log(err);\n      this.setState({\n        boxes: ''\n      })\n    });\n  }\n\n  onRouteChange = (route) =>{\n    if(route === 'signout'){\n      this.setState(initialState);\n    }else if(route==='home'){\n      this.setState({isSignedIn: true})\n    }\n    this.setState({route:route})\n  }\n  render (){\n    const onRouteChange = this.onRouteChange;\n    const onButtonSubmit = this.onButtonSubmit;\n    const onInputChange = this.onInputChange;\n    const {isSignedIn, route, user, boxes, inputUrl} = this.state;\n    const loadUser = this.loadUser;\n    return(\n      <div className=\"App\">\n      <Particles  className='particles' params={ParticlesOption}/>\n        <Navigation\n          onRouteChange={onRouteChange}\n          isSignedIn={isSignedIn}/>\n        {route === 'signin'\n        ? <SignIn loadUser={loadUser} onRouteChange={onRouteChange}/>\n        :(route ==='home'\n          ?<div>\n            <Logo/ >\n            <Rank name={user.name} entries={user.entries}/>\n            <ImageLinkForm\n              onInputChange={onInputChange}\n              onButtonSubmit={onButtonSubmit}/>\n            <FaceRecognition src={inputUrl} boxes={boxes} />\n          </div>\n          :<Register loadUser={loadUser} onRouteChange={onRouteChange} />\n          )\n        }\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}